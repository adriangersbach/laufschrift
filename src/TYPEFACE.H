// Header - File
// Filename: TypeFace.h

//***************************************************************************//
//                                                                           //
// Schriftsatz für die ATMEL Laufschrift                                     //
//                                                                           //
//***************************************************************************//

static uchar code uASCII[][5] = 
{
  {  62,   81,   73,   69,   62},   /* 0 */
  {0x00,   66,  127,   64, 0x00},   /* 1 */
  {  66,   97,   81,   73,   70},   /* 2 */
  {  65,   73,   77,   75,   49},   /* 3 */
  {  24,   20,   18,  127,   16},   /* 4 */
  {  39,   69,   69,   69,   57},   /* 5 */
  {  60,   74,   73,   73,   48},   /* 6 */
  {0x01, 0x01,  121, 0x05, 0x03},   /* 7 */
  {0x01, 0x01,  121, 0x05, 0x03},   /* 8 */
  {0x06,   73,   73,   41,   30},   /* 9 */

  {0x00, 0x00, 0x00, 0x00, 0x00},   /* : */
  {0x00, 0x00, 0x00, 0x00, 0x00},   /* ; */
  {0x00, 0x00, 0x00, 0x00, 0x00},   /* < */
  {0x00, 0x00, 0x00, 0x00, 0x00},   /* = */
  {0x00, 0x00, 0x00, 0x00, 0x00},   /* > */
  {0x00, 0x00, 0x00, 0x00, 0x00},   /* ? */
  {0x00, 0x00, 0x00, 0x00, 0x00},   /* @ */

  { 124,   18,   17,   18,  124},   /* A */
  {  65,  127,   73,   73,   54},   /* B */
  {  62,   65,   65,   65,   34},   // C
  {  65,  127,   65,   65,   62},   // D
  { 127,   73,   73,   73,   65},   // E
  { 127, 0x09, 0x09, 0x09, 0x01},   // F
  {  62,   65,   65,   73,   57},   // G
  { 127, 0x08, 0x08, 0x08,  127},   // H
  {0x00,   65,  127,   65, 0x00},   // I
  {  32,   64,   65,   63, 0x01},   // J
  { 127, 0x08,   20,   34,   65},   // K
  { 127,   64,   64,   64,   64},   // L
  { 127, 0x02,   12, 0x02,  127},   // M
  { 127, 0x04, 0x08,   16,  127},   // N
  {  62,   65,   65,   65,   62},   // O
  { 127, 0x09, 0x09, 0x09, 0x06},   // P
  {  62,   65,   81,   33,   94},   // Q
  { 127,    9,   25,   41,   70},   // R
  {  38,   73,   73,   73,   50},   // S
  {0x01, 0x01,  127, 0x01, 0x01},   // T
  {  63,   64,   64,   64,   63},   // U
  {0x07,   24,   96,   24, 0x07},   // V
  { 127,   32,   24,   32,  127},   // W
  {  99,   20, 0x08,   20,   99},   // X
  {0x03, 0x04,  120, 0x04, 0x03},   // Y
  {  97,   81,   73,   69,   67},   // Z

  {0x00, 0x00, 0x00, 0x00, 0x00},   /* [ */
  {0x00, 0x00, 0x00, 0x00, 0x00},   /* \ */
  {0x00, 0x00, 0x00, 0x00, 0x00},   /* ] */
  {0x00, 0x00, 0x00, 0x00, 0x00},   /* ^ */
  {0x00, 0x00, 0x00, 0x00, 0x00},   /* _ */
  {0x00, 0x00, 0x00, 0x00, 0x00},   /* ` */

  {  56,   68,   68,   60,   64},   // a
  { 127,   68,   68,   68,   56},   // b
  {  56,   68,   68,   68,   32},   // c
  {  56,   68,   68,   72,  127},   // d
  {  56,   84,   84,   84,   24},   // e
  {0x00,    8,  126,    9,    2},   // f
  {0x08,   84,   84,   60, 0x00},   // g
  { 127, 0x04, 0x04,  120, 0x00},   // h
  {0x00, 0x00,  125, 0x00, 0x00},   // i
  {  32,   64,   68,   61, 0x00},   // j
  { 127,   16,   40,   68, 0x00},   // k
  {0x00,   65,  127,   64, 0x00},   // l
  { 120, 0x04,  120, 0x04,  120},   // m
  { 124, 0x08, 0x04, 0x04,  120},   // n
  {  56,   68,   68,   68,   56},   // o
  { 124,   20,   20,   20, 0x08},   // p
  {  24,   36,   20,  124,   64},   // q
  { 124, 0x08, 0x04, 0x04, 0x00},   // r
  {  72,   84,   84,   84,   32},   // s
  {0x04,   62,   68,   32, 0x00},   // t
  {  60,   64,   64,   32,  124},   // u
  {  28,   32,   64,   32,   28},   // v
  {  60,   64,   48,   64,   60},   // w
  {  68,   36,  124,   72,   68},   // x
  {  12,   80,   80,   60, 0x00},   // y
  {  68,  100,   84,   76,   68},   // z
};


///////////////////////////////////////////////////////////////////////////////
// Nummern 0 - 9 mit neuem Ansatz 15.03.2001

#define __0   62,  81,  73,  69,  62  // 0
#define __1 0x00,  66, 127,  64,0x00  // 1
#define __2   66,  97,  81,  73,  70  // 2
#define __3   65,  73,  77,  75,  49  // 3
#define __4   24,  20,  18, 127,  16  // 4
#define __5   39,  69,  69,  69,  57  // 5
#define __6   60,  74,  73,  73,  48  // 6
#define __7 0x01,0x01, 121,0x05,0x03  // 7
#define __8   54,  73,  73,  73,  54  // 8
#define __9 0x06,  73,  73,  41,  30  // 9

// define numbers (NO)
#define _NO0  {__0},{__1},{__2},{__3},{__4} //  5 * 5 Bytes ->  25 Bytes
#define _NO1  {__5},{__6},{__7},{__8},{__9} //  5 * 5 Bytes ->  25 Bytes

#define __NO {_NO0,_NO1}                   // 10 * 5 Bytes ->  50 Bytes

///////////////////////////////////////////////////////////////////////////////
// Sonderzeichen :;<=>? mit neuem Ansatz 15.03.2001

#define __3A 0x00, 0x00, 0x00, 0x00, 0x00 // :
#define __3B 0x00, 0x00, 0x00, 0x00, 0x00 // ;
#define __3C 0x00, 0x00, 0x00, 0x00, 0x00 // <
#define __3D 0x00, 0x00, 0x00, 0x00, 0x00 // =
#define __3E 0x00, 0x00, 0x00, 0x00, 0x00 // >
#define __3F 0x00, 0x00, 0x00, 0x00, 0x00 // ?
#define __40 0x00, 0x00, 0x00, 0x00, 0x00 // @

#define _SZ01 {__3A},{__3B},{__3C},{__3D},{__3E},{__3F}, {__40} // 7 * 5 Bytes -> 30 Bytes


///////////////////////////////////////////////////////////////////////////////
// grosses ABC mit neuem Ansatz 15.03.2001

#define __A  124,  18,  17,  18, 124  // A
#define __B   65, 127,  73,  73,  54  // B
#define __C   62,  65,  65,  65,  34  // C
#define __D   65, 127,  65,  65,  62  // D
#define __E  127,  73,  73,  73,  65  // E
#define __F  127,0x09,0x09,0x09,0x01  // F
#define __G   62,  65,  65,  73,  57  // G
#define __H  127,0x08,0x08,0x08, 127  // H
#define __I 0x00,  65, 127,  65,0x00  // I
#define __J    32,  64,  65,  63,0x01 // J
#define __K  127,0x08,  20,  34,  65  // K
#define __L  127,  64,  64,  64,  64  // L
#define __M  127,0x02,  12,0x02, 127  // M
#define __N  127,0x04,0x08,  16, 127  // N
#define __O   62,  65,  65,  65,  62  // O
#define __P  127,0x09,0x09,0x09,0x06  // P
#define __Q   62,  65,  81,  33,  94  // Q
#define __R  127,   9,  25,  41,  70  // R
#define __S   38,  73,  73,  73,  50  // S
#define __T 0x01,0x01, 127,0x01,0x01  // T
#define __U   63,  64,  64,  64,  63  // U
#define __V 0x07,  24,  96,  24,0x07  // V
#define __W  127,  32,  24,  32, 127  // W
#define __X   99,  20,0x08,  20,  99  // X
#define __Y 0x03,0x04, 120,0x04,0x03  // Y
#define __Z   97,  81,  73,  69,  67  // Z


// define capital letter (KL)
#define _CR0  {__A},{__B},{__C},{__D},{__E},{__F},{__G},{__H} //  8 * 5 Bytes ->  40 Bytes
#define _CR1  {__I},{__J},{__K},{__L},{__M},{__N},{__O},{__P} //  8 * 5 Bytes ->  40 Bytes
#define _CR2  {__Q},{__R},{__S},{__T},{__U},{__V},{__W},{__X} //  8 * 5 Bytes ->  40 Bytes
#define _CR3  {__Y},{__Z}                                     //  2 * 5 Bytes ->  10 Bytes

#define __CL {_CR0,_CR1,_CR2,_CR3}                            // 26 * 5 Bytes -> 130 Bytes


///////////////////////////////////////////////////////////////////////////////
// Sonderzeichen [\]^_' mit neuem Ansatz 15.03.2001

#define __5B 0x00, 0x00, 0x00, 0x00, 0x00 // [
#define __5C 0x00, 0x00, 0x00, 0x00, 0x00 // 
#define __5D 0x00, 0x00, 0x00, 0x00, 0x00 // ]
#define __5E 0x00, 0x00, 0x00, 0x00, 0x00 // ^
#define __5F 0x00, 0x00, 0x00, 0x00, 0x00 // _
#define __60 0x00, 0x00, 0x00, 0x00, 0x00 // `

#define _SZ02 {__5B},{__5C},{__5D},{__5E},{__5F},{__60} // 6 * 5 Bytes -> 30 Bytes

///////////////////////////////////////////////////////////////////////////////
// kleines ABC mit neuem Ansatz 15.03.2001

#define __a   56,  68,  68,  60,  64  // a
#define __b  127,  68,  68,  68,  56  // b
#define __c   56,  68,  68,  68,  32  // c
#define __d   56,  68,  68,  72, 127  // d
#define __e   56,  84,  84,  84,  24  // e
#define __f 0x00,   8, 126,   9,   2  // f
#define __g 0x08,  84,  84,  60,0x00  // g
#define __h  127,0x04,0x04, 120,0x00  // h
#define __i 0x00,0x00, 125,0x00,0x00  // i
#define __j   32,  64,  68,  61,0x00  // j
#define __k  127,  16,  40,  68,0x00  // k
#define __l 0x00,  65, 127,  64,0x00  // l
#define __m  120,0x04, 120,0x04, 120  // m
#define __n  124,0x08,0x04,0x04, 120  // n
#define __o   56,  68,  68,  68,  56  // o
#define __p  124,  20,  20,  20,0x08  // p
#define __q   24,  36,  20, 124,  64  // q
#define __r  124,0x08,0x04,0x04,0x00  // r
#define __s   72,  84,  84,  84,  32  // s
#define __t 0x04,  62,  68,  32,0x00  // t
#define __u   60,  64,  64,  32, 124  // u
#define __v   28,  32,  64,  32,  28  // v
#define __w   60,  64,  48,  64,  60  // w
#define __x   68,  36, 124,  72,  68  // x
#define __y   12,  80,  80,  60,0x00  // y
#define __z   68, 100,  84,  76,  68  // z

// define small letter (SL)
#define _SR0  {__a},{__b},{__c},{__d},{__e},{__f},{__g},{__h} //  8 * 5 Bytes ->  40 Bytes
#define _SR1  {__i},{__j},{__k},{__l},{__m},{__n},{__o},{__p} //  8 * 5 Bytes ->  40 Bytes
#define _SR2  {__q},{__r},{__s},{__t},{__u},{__v},{__w},{__x} //  8 * 5 Bytes ->  40 Bytes
#define _SR3  {__y},{__z}                                     //  2 * 5 Bytes ->  10 Bytes

#define __SL  {_SR0,_SR1,_SR2,_SR3}                           // 26 * 5 Bytes -> 130 Bytes


// define Include all
#define __ALL_ASCII {_NO0,_NO1,_SZ01,_CR0,_CR1,_CR2,_CR3,_SZ02,_SR0,_SR1,_SR2,_SR3} // 75 * 5 Bytes -> 375 Bytes 
//#define __ALL_ASCII {_NO0,_NO1,_CR0,_CR1,_CR2,_CR3,_SR0,_SR1,_SR2,_SR3} // 74 * 5 Bytes -> 370 Bytes 
